///----------------------------------------------------------------------------------------------------
/// Copyright (c) Raidcore.GG - All rights reserved.
///
/// Name         :  Addon.h
/// Description  :  Addon entry point and implementation.
/// Authors      :  K. Bieniek
///----------------------------------------------------------------------------------------------------

#ifndef ADDON_H
#define ADDON_H

#include <windows.h>
#include <string>

#include "nexus/Nexus.h"

#define ADDON_NAME "MouseLookHandler"

///----------------------------------------------------------------------------------------------------
/// GetAddonDef:
/// 	Returns the addons definitions.
///----------------------------------------------------------------------------------------------------
extern "C" __declspec(dllexport) AddonDefinition* GetAddonDef();

///----------------------------------------------------------------------------------------------------
/// Addon Namespace
///----------------------------------------------------------------------------------------------------
namespace Addon
{
	///----------------------------------------------------------------------------------------------------
	/// Load:
	/// 	Entry point.
	///----------------------------------------------------------------------------------------------------
	void Load(AddonAPI* aApi);

	///----------------------------------------------------------------------------------------------------
	/// Unload:
	/// 	Exit point.
	///----------------------------------------------------------------------------------------------------
	void Unload();

	///----------------------------------------------------------------------------------------------------
	/// OnAddonLoaded:
	/// 	Used to react to RTAPI becoming available.
	///----------------------------------------------------------------------------------------------------
	void OnAddonLoaded(int* aSignature);

	///----------------------------------------------------------------------------------------------------
	/// OnAddonUnloaded:
	/// 	Used to react to RTAPI going stale.
	///----------------------------------------------------------------------------------------------------
	void OnAddonUnloaded(int* aSignature);

	///----------------------------------------------------------------------------------------------------
	/// WndProc:
	/// 	Used to redirect inputs.
	///----------------------------------------------------------------------------------------------------
	UINT WndProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam);

	///----------------------------------------------------------------------------------------------------
	/// PreRender:
	/// 	used to detect state changes.
	///----------------------------------------------------------------------------------------------------
	void PreRender();

	///----------------------------------------------------------------------------------------------------
	/// GbSelectable:
	/// 	Used to render individual game bind elements.
	///----------------------------------------------------------------------------------------------------
	void GbSelectable(EGameBinds* aTarget, const char* aLabel, EGameBinds aGameBind);

	///----------------------------------------------------------------------------------------------------
	/// GameBindToString:
	/// 	Localizes gamebinds.
	///----------------------------------------------------------------------------------------------------
	std::string GameBindToString(EGameBinds aGameBind);

	///----------------------------------------------------------------------------------------------------
	/// GbSelector:
	/// 	Dropdown selector for gamebinds.
	///----------------------------------------------------------------------------------------------------
	void GbSelector(const char* aIdentifier, EGameBinds* aTarget);

	///----------------------------------------------------------------------------------------------------
	/// RenderOptions:
	/// 	Callback to render the options window.
	///----------------------------------------------------------------------------------------------------
	void RenderOptions();

	///----------------------------------------------------------------------------------------------------
	/// LoadSettings:
	/// 	Loads the user preferences.
	///----------------------------------------------------------------------------------------------------
	void LoadSettings();

	///----------------------------------------------------------------------------------------------------
	/// SaveSettings:
	/// 	Saves the user preferences.
	///----------------------------------------------------------------------------------------------------
	void SaveSettings();
}

#endif
